a <- available.packages()
head(rownames(a),3)
install.packages("slidify")
installed.packages()
install.packages(c("slidify","ggplot2", "devtools"))
install.packages("slidify")
library(ggplot2)
search()
install.packages("KernSmooth")
library(KernSmooth)
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv/slidify")
install_github("slidify", "ramnathv/slidify")
install_github("slidify", "ramnathv/slidify/slidify")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
source('~/Documents/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1, -1/4), c(-1/4, 1)) )
a$get()
a$getinverse()
cacheSolve(a)
source('~/Documents/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix(rbind(c(1, -1/4), c(-1/4, 1)) )
a$getinverse()
cacheSolve(a)
solve(a)
a <- makeCacheMatrix(rbind(c(1, -1/4), c(-1/4, 1)) )
class(a)
seq1 < seq(1:6)
seq1 <- seq(1:6)
source('~/Documents/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
a <- matrix(c(4, 2, 4, 2), nrow = 2, ncol = 2, byrow = TRUE)
a$get()
class(a)
a$get()
cacheSolve(a)
b <- makeCacheMatrix(matrix(c(1,3,2,4), nrow = 2, ncol = 2))
b$get()
cacheSolve(b)
b$getinverse()
solve(b)
solve(b$get())
b <- makeCacheMatrix(matrix(c(1,3,2,4), nrow = 2, ncol = 2))
b$getinverse()
cacheSolve(b)
source('~/Documents/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
b <- makeCacheMatrix(matrix(c(1,3,2,4), nrow = 2, ncol = 2))
cacheSolve(b)
b$get()
b$getinverse()
c <- makeCacheMatrix(matrix(c(1,3,2,4), nrow = 2, ncol = 2))
c$getinverse()
cacheSolve(c)
cacheSolve(c)
source('~/Documents/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
c <- makeCacheMatrix(matrix(c(1,3,2,4), nrow = 2, ncol = 2))
cacheSolve(c)
getwd()
setwd("/Users/harshitha.ramesh/Documents/datasciencecoursera/")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile = "./data.csv", method = "curl")
list.files(getwd())
dateDownloaded.date()
dateDownloaded <- date()
dataDownloaded
dateDownloaded
data <- read.csv("data.csv")
names(data)
data[data$VAL == 24]
data[[data$VAL == 24]
dsfsd
data
data$VAL
data[data$VAL == 24]
names(data)
data$VAL == 24
data[[data$VAL == 24]]
data[data$VAL == 24,]
data[,data$VAL == 24]
data[data$VAL == 24,]
data[data$VAL == 24,]
data
data[data$VAL == 24,]
data$VAL
data$VAL[data$VAL == 24]
data <- na.rm(data)
data <- na.omit(data)
data[data$VAL == 24,]
data
data <- read.csv("data.csv")
data$VAL[data$VAL == 24]
v <- data$VAL[data$VAL == 24]
v <- v[!is.na(v)]
v
length(v)
library(xlsx)
install.packages("xlsx")
library(xlsx)
data <- read.xlsx("./data.xlsx", sheetIndex = 1, header = TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
data <- read.xlsx(fileURL,"./data.xlsx", sheetIndex = 1, header = TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
data <- read.xlsx(fileURL,"./data.xlsx", sheetIndex = 1, header = TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
data <- read.xlsx(fileURL,"./data.xlsx", sheetIndex = 1, header = TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileURL,destfile = "./data.xlxs", method = "curl")
data <- read.xlsx(fileURL,"./data.xlsx", sheetIndex = 1, header = TRUE)
data <- read.xlsx("./data.xlsx", sheetIndex = 1, header = TRUE)
data <- read.xlsx("data.xlsx", sheetIndex = 1, header = TRUE)
library(xlsx)
getwd()
data <- read.xlsx("./data.xlsx", sheetIndex = 1, header = TRUE)
download.file(fileURL,destfile = "./data.xlxs", method = "curl")
fileURL
data <- read.xlsx("./data.xlsx", sheetIndex=1, header = TRUE)
data <- read.xlsx("data.xlsx", sheetIndex=1, header = TRUE)
list.files()
download.file(fileURL,destfile = "./data1.xlxs", method = "curl")
data <- read.xlsx("data1.xlsx", sheetIndex=1, header = TRUE)
data <- read.xlsx("./data1.xlsx", sheetIndex=1, header = TRUE)
library(xls)
getwd()
data <- read.xlsx("/Users/harshitha.ramesh/Documents/datasciencecoursera/data1.xlsx", sheetIndex=1, header = TRUE)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
df <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",width = c(9,4,4,4,4,4,4,4,4))
dimnames(df)[[2]] <- c("a","b","c","d","e","f","g","h","i")
df
df[1]
df[1][1]
df[,1]
df[1,]
df <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",width = c(9,4,4,4,4,4,4,4,4),skip = 4)
dimnames(df)[[2]] <- c("a","b","c","d","e","f","g","h","i")
df
df <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",width = c(10,4,4,4,4,4,4,4,4),skip = 4)
df
df[1,]
df <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",width = c(10,5,4,4,4,4,4,4,4),skip = 4)
df
df <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",width = c(10,5,5,5,5,5,5,5),skip = 4)
df
df[1m]
df[1,]
df <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",width = c(10,4,5,5,5,5,5,5),skip = 4)
df[1,]
df <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",width = c(10,4,5,4,5,4,5,4,5),skip = 4)
df
df[1,]
df$V6
sum(df$V6)
c <- [1,2,3,4]
c <- c(1,2,3,4)
df <- data.frame("a" = c(1,2,3,4), "b" = c(2,4,6,8))
w <- df[df$a > 2]
w <- df[df$a > 2,]
w
w <- df[which(df$a > 2),2]
w
w <- df[which(df$a > 2),]
w
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
getwd()
download.file(fileURL, destfile = "housingdata.csv", method = "curl")
list.files()
data <- read.csv("housingdata.csv")
data$ACR
acres <- na.rm(data$ACR)
acres <- data$ACR[!is.na(data$ACR)]
acres
acres <- data$ACR
data
nrow(data)
agricultureLogical <- logical(nrow(data))
agricultureLogical <- data[data$ACR == 3 && data$AGC == 6]
agricultureLogical
names(data)
agricultureLogical <- data[data$ACR == 3 && data$AGS == 6]
agricultureLogical
data$ACR == 3
data$ACR == 3 && data$AGS == 6
agricultureLogical[data[data$ACR == 3 && data$AGS == 6]]
typeof(data$ACR)
data$ACR
agricultureLogical <- data$ACR & data$AGS
agricultureLogical
which(agricultureLogical)
data$ACR == 3
agricultureLogical <- data$ACR == 3 & data$AGS == 6
agricultureLogical
which(agricultureLogical)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileURL, "jeff.jpeg",method = "curl")
list.files()
library(jpeg)
install.packages(jpeg)
install.packages("jpeg")
library(jpeg)
data <- readJPEG("jeff.jpeg",native = TRUE)
data
quantile(data)
quantile(data,type=2)
quantile(data,type=5)
quantile(data,c(.3,.8))
install.package("dplyr")
install.packages("dplyr")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL,"GDP.csv",method="curl")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv "
download.file(fileURL,"education.csv",method="curl")
GDPdata <- read.csv("GDP.csv")
EducationData <- read.csv("education.csv")
names(GDPdata)
names(EducationData)
GDPdata$X
mergedData = merge(GDPdata,EducationData,by.x="X",by.y="CountryCode",all=TRUE)
mergedData
names(mergedData)
nrows(mergedData)
nrow(mergedData)
mergedData$X
order <- arrange(mergedData,Gross.domestic.product.2012")
order <- arrange(mergedData,Gross.domestic.product.2012)
order <- arrange(mergedData,Gross.domestic.product.2012)
library(dplyr)
order <- arrange(mergedData,Gross.domestic.product.2012)
order
head(order)
na.rm(mergedData)
GDPdata$X.1
GDPdata$X.2
GDPdata$X.4
GDPdata$X.4
GDPdata$X.5
GDPdata$X
mergedData = merge(GDPdata,EducationData,by.x="X",by.y="CountryCode",all=FALSE)
mergedData
order <- arrange(mergedData,desc(Gross.domestic.product.2012))
order
order$X
order$X[13]
mergedData$X
names(GDP.csv)
names(GDPdata)
mergedData <- merge(EducationData,GDPdata,by.x="CountryCode",by.y = "X",all.x=TRUE)
arrange(mergedData,desc("Gross.domestic.product.2012"))
names(mergedData)
mergedData$Gross.domestic.product.2012
arrange(mergedData,desc("Gross.domestic.product.2012"))
arrange(mergedData,desc(Gross.domestic.product.2012))
arrange(mergedData,desc(Gross.domestic.product.2012))$Short.Name
mergedData
mergedData$CountryCode
mergedData[,c("Short.Name","Gross.domestic.product.2012")]
needed_data <- complete.cases(mergedData[,c("Short.Name","Gross.domestic.product.2012")])
neededdata
needed_data
mergedData[,c("Short.Name","Gross.domestic.product.2012")]
na.omit(mergedData[,c("Short.Name","Gross.domestic.product.2012")])
data <- mergedData[,c("Short.Name","Gross.domestic.product.2012")]
data <- data[complete.cases(data),]
data
GDPData <- read.csv("GDP.csv")
mergedData <- merge(EducationData,GDPdata,by.x="CountryCode",by.y = "X",all.x=TRUE)
arrange(mergedData,desc(Gross.domestic.product.2012))
data <- mergedData[,c("Short.Name","Gross.domestic.product.2012")]
data
arrange(data,desc(Gross.domestic.product.2012))
mergedData <- merge(EducationData,GDPdata,by.x="CountryCode",by.y = "X",all=TRUE)
data <- mergedData[,c("Short.Name","Gross.domestic.product.2012")]
data
mergedData
GDPData <- read.csv("GDP.csv")
mergedData <- merge(EducationData,GDPData,by.x="CountryCode",by.y = "X",all=TRUE)
mergedData <- merge(EducationData,GDPData,by.x="CountryCode",by.y = "X",all.x=TRUE)
data <- mergedData[,c("Short.Name","Gross.domestic.product.2012")]
data
as.numeric(as.character(data$Gross.domestic.product.2012))
data
arrange(data,desc(Gross.domestic.product.2012))
mergedData <- merge(EducationData,GDPData,by.x="CountryCode",by.y = "X",all.x=TRUE)
mergedData$Short.Name
GDPData
GDPData <-read.csv("GDP.csv")
GDPData
GDPData <-read.csv("NewGDP.csv")
list.files()
GDPData <-read.csv("NewGDP.csv")
mergedData <- merge(EducationData,GDPData,by.x="CountryCode",by.y = "X",all.x=TRUE)
mergedData
mergedData$Long.Name
mergedData$Short.Name
GDPData
EducationData
mergedData <- merge(EducationData,GDPData,by.x="CountryCode",by.y = "X",all.y=TRUE)
mergedData
data <- mergedData[,c("Short.Name","Gross.domestic.product.2012")]
names(mergedData)
data <- mergedData[,c("Short.Name","Gross.domestic.product.2014")]
data
as.numeric(as.character(data$Gross.domestic.product.2014))
data
arrange(data,desc(Gross.domestic.product.2014))
typeof(data$Gross.domestic.product.2014)
help("sort")
order(data,Gross.domestic.product.2014)
order(data,data.Gross.domestic.product.2014)
data[order(data$Gross.domestic.product.2014,descending=TRUE)]
names(mergedData)
mergedData[mergedData$Income.Group == "High income: OECD","Gross.domestic.product.2014"]
mergedData[mergedData$Income.Group == "High income: OECD"]
mergedData[mergedData$Income.Group == "High income: OECD",]
mergedData[mergedData$Income.Group == "High income: OECD",]$Gross.domestic.product.2014
v <- mergedData[mergedData$Income.Group == "High income: OECD",]$Gross.domestic.product.2014
v[!is.na(v)]
typeof(v)
mean(v)
v <- as.numeric(v)
mean(v)
v
v
v <- mergedData[mergedData$Income.Group == "High income: OECD",]$Gross.domestic.product.2014
mergedData$Gross.domestic.product.2014 <- as.numeric(mergedData$Gross.domestic.product.2014)
v <- mergedData[mergedData$Income.Group == "High income: OECD",]$Gross.domestic.product.2014
mean(v)
v
mergedData[mergedData$Income.Group == "High income: OECD",]$Gross.domestic.product.2014
mergedData[mergedData$Income.Group == "High income: OECD",]
mergedData[mergedData$Income.Group == "High income: OECD",]$Gross.domestic.product.2014
v
v <- v[!is.na(v)]
v
mean(v)
names(mergedData)
mergedData[mergedData$Income.Group == "High income: OECD",]$X.4
mergedData[mergedData$Income.Group == "High income: OECD",]$X.3
mergedData[mergedData$Income.Group == "High income: OECD",]$X.2
mergedData[mergedData$Income.Group == "High income: OECD",]$X.1
names(GDPData)
GDPData$Gross.domestic.product.2014
mergedData[mergedData$Income.Group == "High income: OECD",]$Gross.domestic.product.2014
mergedData[mergedData$Income.Group == "High income: OECD",]$Short.Name
mergedData[mergedData$Income.Group == "High income: nonOECD",]$Short.Name
mergedData[mergedData$Income.Group == "High income: OECD",]$Gross.domestic.product.2014
mergedData[mergedData$Short.Name == "Australia",]$Gross.domestic.product.2014
GDPData <- read.csv("GDP.csv")
mergedData <- merge(EducationData,GDPData,by.x="CountryCode",by.y = "X",all.y=TRUE)
names(GDPData)
mergedData <- merge(EducationData,GDPData,by.x="CountryCode",by.y = "Ranking",all.y=TRUE)
mergedData[mergedData$Income.Group == "High income: OECD",]$Gross.domestic.product.2014
mergedData[mergedData$Income.Group == "High income: OECD",]$Ranking
mergedData[mergedData$Income.Group == "High income: OECD",]
mergedData
mergedData <- merge(EducationData,GDPData,by.x="CountryCode",by.y = "X",all.y=TRUE)
mergedData[mergedData$Income.Group == "High income: OECD",]
mergedData[mergedData$Income.Group == "High income: OECD",]$Ranking
v <- mergedData[mergedData$Income.Group == "High income: OECD",]$Ranking
v <- v[!is.na(v)]
v
mean(v)
v <- mergedData[mergedData$Income.Group == "High income: nonOECD",]$Ranking
v <- v[!is.na(v)]
mean(v)
quantile(mergedData,Ranking)
quantile(mergedData,Ranking,na.rm=TRUE)
png(file="plot6.png",width=960,height=960,res=72)
g <- ggplot(data,aes(year,Emissions,color = fips))
g + geom_line() + geom_point() + xlab("Year") + ggtitle("Total PM2.5 Emissions from Motor Vehicles from 1999-2008 in Baltimore, Maryland and Los Angeles, California") +scale_shape_discrete(breaks= c("06037","24510"), labels = c("Los Angeles","Baltimore"))
dev.off()
setwd("/Users/harshitha.ramesh/Documents/datasciencecoursera/ExData_Plotting2/")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
SCC_restricted <- SCC[grep("[Vv]ehicles",SCC$EI.Sector),"SCC"]
NEI_restricted <- NEI[NEI$SCC %in% SCC_restricted & (NEI$fips == "24510" | NEI$fips == "06037"),]
data <- NEI_restricted %>% group_by(year,fips) %>% summarize_each(funs(sum(Emissions)))
png(file="plot6.png",width=960,height=960,res=72)
g <- ggplot(data,aes(year,Emissions,color = fips))
g + geom_line() + geom_point() + xlab("Year") + ggtitle("Total PM2.5 Emissions from Motor Vehicles from 1999-2008 in Baltimore, Maryland and Los Angeles, California") +scale_shape_discrete(breaks= c("06037","24510"), labels = c("Los Angeles","Baltimore"))
dev.off()
setwd("/Users/harshitha.ramesh/Documents/datasciencecoursera/ExData_Plotting2/")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
SCC_restricted <- SCC[grep("[Vv]ehicles",SCC$EI.Sector),"SCC"]
NEI_restricted <- NEI[NEI$SCC %in% SCC_restricted & (NEI$fips == "24510" | NEI$fips == "06037"),]
data <- NEI_restricted %>% group_by(year,fips) %>% summarize_each(funs(sum(Emissions)))
png(file="plot6.png",width=960,height=960,res=72)
g <- ggplot(data,aes(year,Emissions,color = fips))
g + geom_line() + geom_point() + xlab("Year") + ggtitle("Total PM2.5 Emissions from Motor Vehicles from 1999-2008 in Baltimore, Maryland and Los Angeles, California") +scale_shape_discrete(breaks= c("06037","24510"), labels = c("Los Angeles","Baltimore"))
dev.off()
setwd("/Users/harshitha.ramesh/Documents/datasciencecoursera/ExData_Plotting2/")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
SCC_restricted <- SCC[grep("[Vv]ehicles",SCC$EI.Sector),"SCC"]
NEI_restricted <- NEI[NEI$SCC %in% SCC_restricted & (NEI$fips == "24510" | NEI$fips == "06037"),]
data <- NEI_restricted %>% group_by(year,fips) %>% summarize_each(funs(sum(Emissions)))
png(file="plot6.png",width=960,height=960,res=72)
g <- ggplot(data,aes(year,Emissions,color = fips))
g + geom_line() + geom_point() + xlab("Year") + ggtitle("Total PM2.5 Emissions from Motor Vehicles from 1999-2008 in Baltimore, Maryland and Los Angeles, California") +scale_shape_discrete(breaks= c("06037","24510"), labels = c("Los Angeles","Baltimore"))
dev.off()
dev.off()
source('~/Documents/datasciencecoursera/ExData_Plotting2/plot6.R')
setwd("/Users/harshitha.ramesh/Documents/datasciencecoursera/ExData_Plotting2/")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
SCC_restricted <- SCC[grep("[Vv]ehicles",SCC$EI.Sector),"SCC"]
NEI_restricted <- NEI[NEI$SCC %in% SCC_restricted & (NEI$fips == "24510" | NEI$fips == "06037"),]
data <- NEI_restricted %>% group_by(year,fips) %>% summarize_each(funs(sum(Emissions)))
png(file="plot6.png",width=960,height=960,res=72)
g <- ggplot(data,aes(year,Emissions,color = fips))
g + geom_line() + geom_point() + xlab("Year") + ggtitle("Total PM2.5 Emissions from Motor Vehicles from 1999-2008 in Baltimore, Maryland and Los Angeles, California") +scale_shape_discrete(breaks= c("06037","24510"), labels = c("Los Angeles","Baltimore"))
dev.off()
data <- NEI_restricted %>% group_by(year,fips) %>% summarize_each(funs(sum(Emissions)))
